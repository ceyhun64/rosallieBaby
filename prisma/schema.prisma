generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Category {
  hospital_outfit_special_set
  hospital_outfit_set
  toy
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  mainImage   String
  description String
  oldPrice    Int
  price       Int
  discount    Int
  category    Category
  subImages   SubImage[]
  favorites   Favorite[] // Product ile Favorite ilişkisi
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  CartItem    CartItem[]
}

model SubImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  surname   String
  email     String     @unique
  password  String
  phone     String?
  favorites Favorite[]
  cartItems CartItem[]
  addresses Address[] // User ile Address ilişkisi
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  createdAt DateTime @default(now())

  @@unique([userId, productId]) // Aynı ürünü bir kullanıcı favori olarak yalnızca bir kez ekleyebilir
}

model CartItem {
  id            Int      @id @default(autoincrement())
  userId        Int
  productId     Int
  quantity      Int      @default(1)
  strollerCover Boolean? // sadece ürün 1 için geçerli
  customName    String? // ürün 1 ve 2 için
  hatToyOption  String? // sadece ürün 1 için
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId, strollerCover, customName, hatToyOption])
}

model Address {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  title     String // Örn: "Home", "Office"
  firstName String
  lastName  String
  address   String
  district  String
  city      String
  zip       String
  phone     String
  country   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
